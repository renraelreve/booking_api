version: 2.1

orbs:
  snyk: snyk/snyk@1.5.0
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0


jobs:
  test-java:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: mvn verify
      - store_test_results:
          path: target/surefire-reports
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository

  scan-vulnerabilities:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t renraelreve77/booking-api .
      - snyk/scan:
          docker-image-name: renraelreve77/booking-api
          severity-threshold: high
          fail-on-issues: false

  codescan:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t renraelreve77/booking-api .
      - snyk/install
      - run: |
          snyk code test
      # - snyk/scan:
      #     docker-image-name: renraelreve77/booking-api
      #     severity-threshold: high
      #     fail-on-issues: false

  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: renraelreve77/booking-api
      - docker/push:
          image: renraelreve77/booking-api

  deploy:
    docker:
        - image: cimg/openjdk:17.0
    steps:
        - setup_remote_docker
        - heroku/install
        - checkout
        - run:
            name: Heroku Container-Push
            command: |
                heroku container:login
                heroku stack:set container -a booking-api
                heroku container:push web -a booking-api
                heroku container:release web -a booking-api

workflows:
  build-and-test-scan-publish-deploy:
    jobs:
      - test-java
      - scan-vulnerabilities:
          requires:
            - test-java
      - codescan:
          requires:
            - test-java
      - publish:
          requires:
            - test-java
            - scan-vulnerabilities
          filters:
            branches:
              only:
                - develop
                - testrelease
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only: testrelease
