spring.application.name=booking-api
# to set spring-boot to start up using application-dev.properties by default
spring.profiles.active=dev,withAuth

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# spring.datasource.url=${DATABASE_URL}
# spring.datasource.username=${DATABASE_USERNAME}
# spring.datasource.password=${DATABASE_PASSWORD}
# spring.datasource.url=jdbc:postgresql://u6snf56msvih79:pf4c7035ec2468ccb349659f47dee6b93be09d62c376aabfc11bead188663dfc5@c3gtj1dt5vh48j.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/du5p2phe8u51v?sslmode=require
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Enables the H2 console, which is a UI for the H2 database.
# spring.h2.console.enabled=true
# The URL path to the H2 console.
# spring.h2.console.path=/h2
# The JDBC URL for the H2 database.
# You can change the name as needed -> booking-api
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.datasource.url=jdbc:h2:mem:booking-api

# PostgreSQL
# spring.datasource.url=jdbc:postgresql://localhost:5432/booking_api
# for WSL, use postgres
# for Mac, use your Mac username
# spring.datasource.username=postgres
# Password can be blank if we set it to trust in pg_hba.conf
# spring.datasource.password=493827abc
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# this will drop and create tables again
spring.jpa.hibernate.ddl-auto=create
# this can be used to update tables
# spring.jpa.hibernate.ddl-auto=update


spring.main.allow-circular-references=true

# Logging Configuration
logging.level.root=INFO
# logging.file.name=logs/application.log
